@page "/conferencesessions/delete"
@inject BlazorConfApp.Data.BlazorConfAppContext DB
@using BlazorConfApp.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>ConferenceSession</h4>
    <hr />
    @if (conferencesession is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@conferencesession.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Speaker</dt>
            <dd class="col-sm-10">@conferencesession.Speaker</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Abstract</dt>
            <dd class="col-sm-10">@conferencesession.Abstract</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TechnicalDomain</dt>
            <dd class="col-sm-10">@conferencesession.TechnicalDomain</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Duration</dt>
            <dd class="col-sm-10">@conferencesession.Duration</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsPublished</dt>
            <dd class="col-sm-10">@conferencesession.IsPublished</dd>
        </dl>
        <EditForm method="post" Model="conferencesession" OnValidSubmit="DeleteConferenceSession" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(conferencesession is null)">Delete</button> |
            <a href="/conferencesessions">Back to List</a>
        </EditForm>
    }
</div>

@code {
    ConferenceSession? conferencesession;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        conferencesession = await DB.ConferenceSession.FirstOrDefaultAsync(m => m.Id == Id);

        if (conferencesession is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteConferenceSession()
    {
        DB.ConferenceSession.Remove(conferencesession!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/conferencesessions");
    }
}
