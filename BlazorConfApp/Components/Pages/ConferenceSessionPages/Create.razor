@page "/conferencesessions/create"
@inject BlazorConfApp.Data.BlazorConfAppContext DB
@using BlazorConfApp.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>ConferenceSession</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ConferenceSession" OnValidSubmit="AddConferenceSession" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="ConferenceSession.Title" class="form-control" /> 
                <ValidationMessage For="() => ConferenceSession.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="speaker" class="form-label">Speaker:</label> 
                <InputText id="speaker" @bind-Value="ConferenceSession.Speaker" class="form-control" /> 
                <ValidationMessage For="() => ConferenceSession.Speaker" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="abstract" class="form-label">Abstract:</label> 
                <InputText id="abstract" @bind-Value="ConferenceSession.Abstract" class="form-control" /> 
                <ValidationMessage For="() => ConferenceSession.Abstract" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="technicaldomain" class="form-label">TechnicalDomain:</label> 
                <InputText id="technicaldomain" @bind-Value="ConferenceSession.TechnicalDomain" class="form-control" /> 
                <ValidationMessage For="() => ConferenceSession.TechnicalDomain" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="duration" class="form-label">Duration:</label> 
                <InputNumber id="duration" @bind-Value="ConferenceSession.Duration" class="form-control" /> 
                <ValidationMessage For="() => ConferenceSession.Duration" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="ispublished" class="form-label">IsPublished:</label> 
                <InputCheckbox id="ispublished" @bind-Value="ConferenceSession.IsPublished" class="form-check-input" /> 
                <ValidationMessage For="() => ConferenceSession.IsPublished" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/conferencesessions">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public ConferenceSession ConferenceSession { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddConferenceSession()
    {
        DB.ConferenceSession.Add(ConferenceSession);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/conferencesessions");
    }
}
